import pandas as pd
import os
import sys
import json
import re

id_city = {139333598: '\ufeffОренбург', 54385637: 'Архангельск', 56786071: 'Астрахань', 37094684: 'Тольятти',\
 39699882: 'Челябинск', 95388014: 'Ярославль', 89507937: 'Хабаровск', 41216154: 'Ростов-на-Дону',\
 47908301: 'Калуга', 117782125: 'Краснодар', 60460495: 'Липецк', 7865622: 'Тула', 62621848: 'Красноярск',\
 134920716: 'Пенза', 29721010: 'Самара', 29725575: 'Тюмень', 23967044: 'Уфа', 38590870: 'Новокузнецк',\
 27126289: 'Казань', 140865189: 'Волгоград', 30453222: 'Новосибирск', 55471849: 'Рязань', 12973535: 'Омск',\
 34274730: 'Нижний Новгород', 89458252: 'Владивосток', 29606802: 'Томск', 27566010: 'Саратов',\
 32182751: 'Екатеринбург', 67100441: 'Барнаул', 41682535: 'Ульяновск', 35929536: 'Иркутск',\
 3551694: 'Пермь', 89368740: 'Воронеж', 27585111: 'Ижевск', 2786108: 'Кемерово', 29380417: 'Абакан',\
 19003088: 'Горно-Алтайск', 39560954: 'Анадырь', 113818503: 'Белгород', 39560083: 'Биробиджан',\
 168019671: 'Благовещенск', 29492720: 'Иваново', 43346024: 'Черкесск', 42594637: 'Элиста', 42535075: 'Грозный',\
 42329155: 'Ханты-Мансийск', 35068738: 'Москва',\
 55342106: 'Севастополь', 23558538: 'Калининград', 41393439: 'Киров', 42943762: 'Кызыл', 41830487: 'Кострома',\
 54576025: 'Курск', 61485111: 'Магадан', 42413977: 'Магас', 42564785: 'Майкоп', 5608669: 'Мурманск',\
 43044144: 'Нальчик', 4730335: 'Ставрополь', 66415024: 'Курган', 34461379: 'Великий Новгород',\
 24684922: 'Тверь', 157227477: 'Брянск', 49796420: 'Петропавловск-Камчатский', 107816149: 'Орел',\
 34763916: 'Вологда', 60543844: 'Владикавказ', 1205247: 'Псков', 33412153: 'Йошкар-Ола', 33993930: 'Сыктывкар',\
 23951627: 'Чебоксары', 42329298: 'Салехард', 16308781: 'Симферополь', 71991592: 'Сочи', 107493817: 'Улан-Удэ',\
 29378821: 'Петрозаводск', 38801259: 'Саранск', 124728567: 'Тамбов', 32608222: 'Смоленск', 30488458: 'Чита',\
 137330177: 'Владимир', 139776120: 'Якутск', 43737658: 'Нарьян-Мар', 42286071: 'Махачкала',\
 39560963: 'Южно-Сахалинск', 23702661: 'Санкт-Петербург', 104083518: 'ростов-на-дону'}

city_region = {'грозный': 'чечня',\
 'петрозаводск': 'республика карелия', 'горно-алтайск': 'республика алтай', 'оренбург': 'оренбургская область',\
 'челябинск': 'челябинская область', 'казань': 'республика татарстан', 'мурманск': 'мурманская область',\
 'пермь': 'пермский край', 'кызыл': 'республика тыва', 'южно-сахалинск': 'сахалинская область',\
 'тула': 'тульская область', 'хабаровск': 'хабаровский край', 'краснодар': 'краснодарский край',\
 'красноярск': 'красноярский край', 'липецк': 'липецкая область', 'магадан': 'магаданская область',\
 'саранск': 'республика мордовия', 'псков': 'псковская область', 'новосибирск': 'новосибирская область',\
 'кемерово': 'кемеровская область', 'улан-удэ': 'республика бурятия', 'череповец': 'вологодская область',\
 'салехард': 'ямало-ненецкий ао', 'барнаул': 'алтайский край', 'ставрополь': 'ставропольский край',\
 'иваново': 'ивановская область', 'владивосток': 'приморский край', 'майкоп': 'республика адыгея',\
 'ижевск': 'удмуртская республика', 'архангельск': 'архангельская область', 'сыктывкар': 'коми',\
 'ростов-на-дону': 'ростовская область', 'благовещенск': 'амурская область', 'смоленск': 'смоленская область',\
 'самара': 'самарская область', 'тверь': 'тверская область', 'нальчик': 'кабардино-балкарская республика',\
 'ханты-мансийск': 'ханты-мансийский ао - югра', 'курган': 'пермский край', 'киров': 'кировская область',\
 'калуга': 'калужская область', 'чита': 'забайкальский край', 'уфа': 'республика башкортостан',\
 'калининград': 'калининградская область', 'курск': 'алтайский край', 'сочи': 'краснодарский край',\
 'воронеж': 'воронежская область', 'новгород': 'новгородская область', 'томск': 'томская область',\
 'москва': 'г.москва', 'омск': 'омская область', 'элиста': 'республика калмыкия', 'тамбов': 'тамбовская область',\
 'петропавловск-камчатский': 'камчатский край', 'абакан': 'республика хакасия',\
 'нижний новгород': 'нижегородская область', 'ульяновск': 'ульяновская область',\
 'йошкар-ола': 'республика марий эл', 'владимир': 'владимирская область', 'екатеринбург': 'свердловская область',\
 'чебоксары': 'чувашская республика - чувашия', 'тюмень': 'тюменская область', 'астрахань': 'астраханская область',\
 'владикавказ': 'республика северная осетия - алания', 'назрань': 'республика ингушетия',\
 'набережные челны': 'республика татарстан', 'иркутск': 'иркутская область', 'кострома': 'костромская область',\
 'якутск': 'республика саха (якутия)', 'орел': 'пермский край', 'пенза': 'пензенская область',\
 'брянск': 'брянская область', 'ярославль': 'ярославская область', 'саратов': 'саратовская область',\
 'вологда': 'вологодская область', 'санкт-петербург': 'г.санкт-петербург', 'минеральные воды': 'ставропольский край',\
 'рязань': 'рязанская область', 'махачкала': 'республика дагестан', 'белгород': 'белгородская область',\
 'тольятти': 'самарская область', 'волгоград': 'волгоградская область', 'нарьян-мар': 'ненецкий ао',\
 'великий новгород': 'новгородская область', 'севастополь': 'севастополь',\
 'новокузнецк': 'кемеровская область', 'черкесск': 'карачаево-черкесская республика',\
 'магас': 'ингушетия', 'биробиджан': 'еврейская ао', 'анадырь': 'чукотский ао', 'симферополь': 'крым'}


def clean(text):
    if type(text) != str:
        return ''

    #url_regex = r'https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\\+.~#?&/=]*)'
    #word_regex = r'[А-Яа-я]+'

    #text = re.sub(url_regex, '', text)
    text = text.lower()
    text = text.replace('ё', 'е')
    #text = ' '.join(re.findall(word_regex, text))
    return text

def get_hashtags(text):
    if type(text) != str:
        return ''

    hashtag_regex = r'#[А-Яа-я]+'
    return list(map(lambda x: clean(x[1:]), re.findall(hashtag_regex, text)))

def concat_json1(path):
	json_files = list(filter(lambda x: x[-5:]  == '.json', os.listdir(path)))

	media = []
	for json_file in json_files:
	    f = open(path + '/' + json_file)
	    media += map(lambda x: [x, json_file[:-5].lower()], json.load(f))
	    f.close()
	media = pd.DataFrame(media)
	media.rename({0: 'news', 1: 'city'}, axis="columns", inplace=True)

	media['city'] = media.city.apply(clean)
	media.news = media.news.apply(lambda x: x.replace('\n', ' '))
	media['date'] = ''
	media['tags'] = '[]'
	media['clarification'] = ''
	media['region'] = media.city.apply(lambda x: city_region[x])
	media['link'] = ''

	media.to_csv(path + '/collected.csv')

def concat_json2(path):
	json_files = list(filter(lambda x: x[-5:]  == '.json', os.listdir(path)))

	media = []
	for json_file in json_files:
	    f = open(path + '/' + json_file)
	    media += map(lambda x: [x[0], x[1], json_file[:-5].lower()], json.load(f))
	    f.close()
	media = pd.DataFrame(media)
	media.rename({0: 'news', 1: 'link', 2: 'city'}, axis="columns", inplace=True)
	media['city'] = media.city.apply(clean)
	media['date'] = ''
	media['tags'] = '[]'
	media['clarification'] = ''
	media['region'] = media.city.apply(lambda x: city_region[x])

	media.to_csv(path + '/collected.csv')

def concat_csv(path, delim='№%:№%:'):
	csv_files = list(filter(lambda x: x[:2] == 'pu', os.listdir(path)))
	vk_publics = []
	for csv_file in csv_files:
	    vk_publics.append(pd.read_csv(path + '/' + csv_file, sep=delim, engine='python', header=None))
	vk_publics = pd.concat(vk_publics, sort=True, ignore_index=True)

	vk_publics.rename({0: 'news', 1: 'date', 2: 'link'}, axis="columns", inplace=True)

	vk_publics['tags'] = vk_publics.news.apply(get_hashtags)
	#vk_publics['news'] = vk_publics['news'].apply(clean)
	vk_publics['clarification'] = ''
	vk_publics['city'] = vk_publics.link.apply(lambda x: clean(id_city[int(x)]))
	vk_publics['region'] = vk_publics.city.apply(lambda x: city_region[x])

	links = vk_publics.link.apply(lambda x: 'vk.com/public' + str(x))
	vk_publics.drop('link', inplace=True, axis=1)
	vk_publics['link'] = links

	vk_publics.to_csv(path + '/collected.csv')

if __name__ == '__main__':
	file_type = sys.argv[1]
	path = sys.argv[2]

	if file_type == 'json1':
		concat_json1(path)
	elif file_type == 'json2':
		concat_json2(path)
	elif file_type == 'csv':
		if len(sys.argv) >= 4:
			concat_csv(path, sys.argc[3])
		else:
			concat_csv(path)